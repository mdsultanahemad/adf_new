{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-c001"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"ls_database_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_database'"
		},
		"ls_datalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_datalake'"
		},
		"ls_database_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "dbserver-ser.database.windows.net"
		},
		"ls_database_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "db_working"
		},
		"ls_database_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "mdsultanahemad"
		},
		"ls_datalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://covidreporingsa.dfs.core.windows.net/"
		},
		"ls_rest_api_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pokeapi.co/api/v2/pokemon"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/RestApi')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Endpoint",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://pokeapi.co/api/v2/pokemon"
						}
					},
					{
						"name": "copyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Endpoint",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"QueryParameters.offset": {
										"value": "RANGE:0:@{activity('Endpoint').output.count}:20",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_rest",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-01T16:35:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_rest')]",
				"[concat(variables('factoryId'), '/datasets/ds_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "last_cdc",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_cdc",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "total_res",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "last_cdc",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "ls_database",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "select count(*) as tot_res from @{pipeline().parameters.schema}.@{pipeline().parameters.table}\nwhere last_updated >\n '@{if(empty(pipeline().parameters.backdate),activity('last_cdc').output.value[0].cdc_timestamp,pipeline().parameters.backdate) }'",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "check new records",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "total_res",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('total_res').output.resultSets[0].rows[0].tot_res,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select * from @{pipeline().parameters.schema}.@{pipeline().parameters.table}\nwhere last_updated >\n  '@{if(empty(pipeline().parameters.backdate),activity('last_cdc').output.value[0].cdc_timestamp,pipeline().parameters.backdate) }'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_database",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_parquet",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "change cdc",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "maxCDC",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "cdc_timestamp",
													"value": {
														"value": "@activity('maxCDC').output.resultSets[0].rows[0].cdc_timestamp",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_empty_json",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_cdc",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "maxCDC",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "load",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "ls_database",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "select max(last_updated) as cdc_timestamp from @{pipeline().parameters.schema}.@{pipeline().parameters.table}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('total_res').output.resultSets[0].rows[0].tot_res,0)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Web1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": "https://www.google.com/"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "source"
					},
					"table": {
						"type": "string",
						"defaultValue": "Orders"
					},
					"backdate": {
						"type": "string",
						"defaultValue": "2025-09-24"
					}
				},
				"variables": {
					"t": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-01T07:57:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_cdc')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_database')]",
				"[concat(variables('factoryId'), '/datasets/ds_database')]",
				"[concat(variables('factoryId'), '/datasets/ds_parquet')]",
				"[concat(variables('factoryId'), '/datasets/ds_empty_json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_metadata",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SwitchFile",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@split(item().name,'.')[0]",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "customers",
												"activities": [
													{
														"name": "copy customers",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".txt"
																}
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "ds_csv_dynamic",
																"type": "DatasetReference",
																"parameters": {
																	"p_container": "source",
																	"p_folder": "files",
																	"p_file": {
																		"value": "@item().name",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "ds_csv_dynamic",
																"type": "DatasetReference",
																"parameters": {
																	"p_container": "sink",
																	"p_folder": "customers",
																	"p_file": {
																		"value": "@item().name",
																		"type": "Expression"
																	}
																}
															}
														]
													}
												]
											},
											{
												"value": "drivers",
												"activities": [
													{
														"name": "copy drivers",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".txt"
																}
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "ds_csv_dynamic",
																"type": "DatasetReference",
																"parameters": {
																	"p_container": "source",
																	"p_folder": "files",
																	"p_file": {
																		"value": "@item().name",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "ds_csv_dynamic",
																"type": "DatasetReference",
																"parameters": {
																	"p_container": "sink",
																	"p_folder": "drivers",
																	"p_file": {
																		"value": "@item().name",
																		"type": "Expression"
																	}
																}
															}
														]
													}
												]
											},
											{
												"value": "trips",
												"activities": [
													{
														"name": "copy trips",
														"type": "Copy",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"source": {
																"type": "DelimitedTextSource",
																"storeSettings": {
																	"type": "AzureBlobFSReadSettings",
																	"recursive": true,
																	"enablePartitionDiscovery": false
																},
																"formatSettings": {
																	"type": "DelimitedTextReadSettings"
																}
															},
															"sink": {
																"type": "DelimitedTextSink",
																"storeSettings": {
																	"type": "AzureBlobFSWriteSettings"
																},
																"formatSettings": {
																	"type": "DelimitedTextWriteSettings",
																	"quoteAllText": true,
																	"fileExtension": ".txt"
																}
															},
															"enableStaging": false,
															"translator": {
																"type": "TabularTranslator",
																"typeConversion": true,
																"typeConversionSettings": {
																	"allowDataTruncation": true,
																	"treatBooleanAsNumber": false
																}
															}
														},
														"inputs": [
															{
																"referenceName": "ds_csv_dynamic",
																"type": "DatasetReference",
																"parameters": {
																	"p_container": "source",
																	"p_folder": "files",
																	"p_file": {
																		"value": "@item().name",
																		"type": "Expression"
																	}
																}
															}
														],
														"outputs": [
															{
																"referenceName": "ds_csv_dynamic",
																"type": "DatasetReference",
																"parameters": {
																	"p_container": "sink",
																	"p_folder": "trips",
																	"p_file": {
																		"value": "@item().name",
																		"type": "Expression"
																	}
																}
															}
														]
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-02T14:10:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_metadata')]",
				"[concat(variables('factoryId'), '/datasets/ds_csv_dynamic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/schema')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get File Name",
						"description": "the purpose of the activity is to get all the files present in source container and file directory",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_metadata",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "For each file",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File Name').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"value": "@if(equals(item().name,'customers.csv' ),\npipeline().parameters.customers_schema,\nif(equals(item().name,'drivers.csv' ),\npipeline().parameters.drivers_schema,\npipeline().parameters.trips_schema\n))",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "ds_csv_dynamic",
											"type": "DatasetReference",
											"parameters": {
												"p_container": "source",
												"p_folder": "files",
												"p_file": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_csv_dynamic",
											"type": "DatasetReference",
											"parameters": {
												"p_container": "sink",
												"p_folder": "schema",
												"p_file": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"customers_schema": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "customer_id",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "customer_id",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "first_name",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "first_name",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "last_name",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "last_name",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "email",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "email",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "phone_number",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "phone_number",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "city",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "city",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "signup_date",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "signup_date",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "last_updated_timestamp",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "last_updated_timestamp",
										"type": "String",
										"physicalType": "String"
									}
								}
							],
							"typeConversion": true,
							"typeConversionSettings": {
								"allowDataTruncation": true,
								"treatBooleanAsNumber": false
							}
						}
					},
					"drivers_schema": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "driver_id",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "driver_id",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "first_name",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "first_name",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "last_name",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "last_name",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "phone_number",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "phone_number",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "vehicle_id",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "vehicle_id",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "driver_rating",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "driver_rating",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "city",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "city",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "last_updated_timestamp",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "last_updated_timestamp",
										"type": "String",
										"physicalType": "String"
									}
								}
							],
							"typeConversion": true,
							"typeConversionSettings": {
								"allowDataTruncation": true,
								"treatBooleanAsNumber": false
							}
						}
					},
					"trips_schema": {
						"type": "object",
						"defaultValue": {
							"type": "TabularTranslator",
							"mappings": [
								{
									"source": {
										"name": "trip_id",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "trip_id",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "driver_id",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "driver_id",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "customer_id",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "customer_id",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "vehicle_id",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "vehicle_id",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "trip_start_time",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "trip_start_time",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "trip_end_time",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "trip_end_time",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "start_location",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "start_location",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "end_location",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "end_location",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "distance_km",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "distance_km",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "fare_amount",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "fare_amount",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "payment_method",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "payment_method",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "trip_status",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "trip_status",
										"type": "String",
										"physicalType": "String"
									}
								},
								{
									"source": {
										"name": "last_updated_timestamp",
										"type": "String",
										"physicalType": "String"
									},
									"sink": {
										"name": "last_updated_timestamp",
										"type": "String",
										"physicalType": "String"
									}
								}
							],
							"typeConversion": true,
							"typeConversionSettings": {
								"allowDataTruncation": true,
								"treatBooleanAsNumber": false
							}
						}
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-03T11:09:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_metadata')]",
				"[concat(variables('factoryId'), '/datasets/ds_csv_dynamic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/schuled_trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipeline1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"schema": {
									"value": "@pipeline().parameters.schema",
									"type": "Expression"
								},
								"table": {
									"value": "@pipeline().parameters.table_name",
									"type": "Expression"
								},
								"backdate": {
									"value": "@pipeline().parameters.back_date",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "alerts",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-07.northcentralus.logic.azure.com:443/workflows/690c9cd53ce64732bfa12ce1d521cd4c/triggers/When_an_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_an_HTTP_request_is_received%2Frun&sv=1.0&sig=ZyzUgLUBPdlGsQteMIHOON-K5jgJJekPL1lYQL9bfXU",
							"body": {
								"value": "{\n    \"pipeline_name\": \"@{pipeline().Pipeline}\",\n    \"pipeline_run_id\":\"@{pipeline().RunId}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "source"
					},
					"table_name": {
						"type": "string",
						"defaultValue": "Orders"
					},
					"back_date": {
						"type": "string",
						"defaultValue": "\"\""
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-01T16:35:13Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wait_pipeline_24_10_2025')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cost-analysis.csv",
						"folderPath": "files",
						"fileSystem": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "files",
						"fileSystem": "sink"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_cdc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cdc.json",
						"folderPath": "monitor",
						"fileSystem": "source"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"cdc_timestamp": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_csv_dynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_container": {
						"type": "string"
					},
					"p_folder": {
						"type": "string"
					},
					"p_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().p_folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().p_container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_database')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_database",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_database')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_empty_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "empty.json",
						"folderPath": "monitor",
						"fileSystem": "source"
					}
				},
				"schema": {
					"type": "object"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "pokemon.json",
						"folderPath": "API",
						"fileSystem": "sink"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_metadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "files",
						"fileSystem": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Orders",
						"fileSystem": "sink"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_rest_api",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "?offset={offset}",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_rest_api')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_database')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_database_properties_typeProperties_server')]",
					"database": "[parameters('ls_database_properties_typeProperties_database')]",
					"encrypt": "optional",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_database_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_database_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_datalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_datalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_datalake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_rest_api')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_rest_api_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/scheuled_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "schuled_trigger",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-10-01T10:54:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								12
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/schuled_trigger')]"
			]
		}
	]
}